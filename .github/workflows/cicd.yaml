# .github/workflows/cicd.yaml

on:
  push: 
    branches: [ main ] 

jobs:
  # --- Этап Continuous Integration (CI) ---

  testing:
    name: Run Tests
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code 
        uses: actions/checkout@v4

      - name: Set up Python 
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' 

      - name: Install dependencies 
        run: pip install flask pytest 

      - name: Run tests
        run: pytest

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: testing 

    permissions:
      contents: read 
      packages: write 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

	- name: Debug: Verify files in runner workspace
        run: |
          echo "Listing files in the workspace root:"
          ls -la
          echo ""
          echo "Listing files in the templates directory (if it exists):"
          ls -la templates/ || echo "templates/ directory not found"
          echo ""
          echo "Content of index.html:"
          cat index.html || echo "index.html not found in root"
          echo ""
          echo "Content of templates/index.html:"
          cat templates/index.html || echo "templates/index.html not found"

      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 

      - name: Login to GitHub Container Registry 
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} 
          password: ${{ secrets.GITHUB_TOKEN }} 

      - name: Extract metadata (tags, labels) for Docker 
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=sha,prefix=
          

      - name: Build and push Docker image 
        uses: docker/build-push-action@v5
        with:
          context: . 
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
          cache-from: type=gha
          cache-to: type=gha,mode=max


  deploy:
    name: Deploy to EC2
    
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    runs-on: ubuntu-latest
    needs: [testing, build] 

    steps:
      - name: Deploy via SSH 
        
        uses: appleboy/ssh-action@v1.0.0 

        with:
          host: ${{ secrets.SSH_HOST }} 
          username: ubuntu 
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: | 
            echo "Connecting to EC2 instance..."
            
            cd /home/ubuntu/test_cicd
            echo "Changed directory to $(pwd)"


            echo "Pulling latest Docker image from registry..."
            docker compose pull web 

            echo "Restarting Docker Compose services..."
            docker compose up -d --force-recreate --no-deps web 

            echo "Deployment script finished."
